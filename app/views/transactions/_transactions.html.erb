<script type="application/json" id="pie-chart-data">
  <%= @data.to_json.html_safe %>
</script>

  <header class="page-content-header group">
    <h3 class="page-title">All Transactions</h3>
</header>
<article class="page-body">

  <script type="application/json" id="url-data">
    <%= urls_for_transaction_categories.to_json.html_safe %>
  </script>
  <article class="card">
    <div id="pie-chart-container"></div>
  </article>

      <form action="<%= account_choose_url %>" method="get" class="account-selector group">
    <div class="select">
      <select name="account[id]">
        <option value="0" selected>All</option>
        <% @accounts.each do |account| %>
           <%= account.account_name %>
           <option value="<%= account.id %>"><%= account.account_name %></option>
        <% end %>
      </select>
      </div>
      <div class="submit view-button">
        <input type="submit" value="View">
      </div>
      </form>
      <div class="transactions-table-container">

<div class="transactions-table">
<table>
<thead>
  <th>Account</th>
  <th>Date</th>
  <th>Description</th>
  <th>Category</th>
  <th>Amount</th>
</thead>
<tbody>
<% transactions.each do |transaction| %>
  <%= render partial: 'transactions/transaction', locals: { transaction: transaction } %>
<% end %>
</tbody>
</table>

      </div>
      </div>
  </article>

<script>


    // google.setOnLoadCallback(drawPieChart);

    var pieData = JSON.parse($("#pie-chart-data").html());
    var urls = JSON.parse($("#url-data").html());
    console.log(pieData);
    var labels = [];
    pieData.forEach(function(arr) {
      labels.push(arr[0])
    });

    dataRows = [];

    pieData.forEach(function(arr) {
      dataRows.push([arr[0], arr[1]]);
    });

    function drawPieChart() {
      console.log('in drawPieChart')
      var data = new google.visualization.DataTable();
      data.addColumn('string', 'Category');
      data.addColumn('number', 'Count');
      data.addRows(pieData);

      var options = {'title':'Transactions by Category', 'height': 400, 'backgroundColor': '#F3F3F3' };

      var chart = new google.visualization.PieChart(document.getElementById('pie-chart-container'));
      

      function selectHandler() {
        var selectedItem = chart.getSelection()[0];
        if (selectedItem) {
          console.log(chart.getSelection());
          var goToUrl = urls[data.getValue(selectedItem.row, 0)]
          console.log(goToUrl);
          $.ajax({
            url: goToUrl,
            type: 'GET',
            success: function (data) {
              $(".transactions-table-container").empty();
              $(".transactions-table-container").html(data);
            }
          })
        }
      };

      function readyHandler () {
        $("#pie-chart-container").on('click', function (event) {
          console.log(event)
        if ($(event.target).prop("tagName") == "rect") {
          $.ajax({
            url: $(".page").attr("data-url"),
            type: 'GET',
            success: function(data) {
              console.log('hi')
              chart.setSelection();
              $(".page-content").empty();
              $(".page-content").html(data);
              drawChart();
            }
          })
        }
       });
      };

      google.visualization.events.addListener(chart, 'select', selectHandler);
      google.visualization.events.addListener(chart, 'ready', readyHandler);

      chart.draw(data, options);
    }
    drawPieChart();
  $(document).ready(function(){

    $('tbody').on("webkitAnimationEnd", '.transaction-container', function(event){
      $(event.currentTarget).removeClass("green-background");
    });

    $('tbody').on('keypress', '.inline-edit', function(event){
      if (event.which == 13) {
        event.preventDefault();
        var $target = $(event.currentTarget);
        var transactionUrl = $target.attr("data-transaction-url");
        var formData = $target.serialize();
        var text = $target.val();


        console.log("target", $target)
        $.ajax({
          url: transactionUrl,
          type: 'PATCH',
          data: formData,
          success: function(data) {
            $target.blur();
            $target.closest(".transaction-container").removeClass("green-background");
            $target.closest(".transaction-container").addClass("green-background");
          },

          error: function(data) {
            $target.empty();
            $target.html(text);
          }
        });
      }
     });

    });
</script>